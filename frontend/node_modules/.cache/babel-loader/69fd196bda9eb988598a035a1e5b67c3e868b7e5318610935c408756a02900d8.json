{"ast":null,"code":"var _jsxFileName = \"C:\\\\ADHDStudyApp\\\\frontend\\\\src\\\\components\\\\Login-Register\\\\login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport instance from '../../custom-axios/axios';\nimport { useNavigate } from \"react-router-dom\";\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [form, setForm] = useState({\n    username: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await instance.post('/auth/login', form);\n      const {\n        token,\n        userId,\n        username\n      } = response.data;\n      if (!token || !userId) {\n        throw new Error(\"Invalid login response: missing token or userId\");\n      }\n\n      // Store data in localStorage\n      localStorage.setItem('jwt', token);\n      localStorage.setItem('userId', userId);\n      localStorage.setItem('username', username);\n      console.log(\"Logged in successfully:\", {\n        username,\n        userId\n      });\n      setForm({\n        username: '',\n        password: ''\n      });\n      navigate(`/`);\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      alert(\"Login failed. Please check your credentials.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container px-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-3\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: form.username,\n        onChange: e => setForm({\n          ...form,\n          username: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: form.password,\n        onChange: e => setForm({\n          ...form,\n          password: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"uO0CQVeit6kwEGWM2OPM7or3KUY=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","instance","useNavigate","jsxDEV","_jsxDEV","Login","_s","form","setForm","username","password","navigate","handleSubmit","e","preventDefault","response","post","token","userId","data","Error","localStorage","setItem","console","log","err","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/ADHDStudyApp/frontend/src/components/Login-Register/login.js"],"sourcesContent":["import { useState } from 'react';\r\nimport instance from '../../custom-axios/axios';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport './login.css'\r\n\r\nexport default function Login() {\r\n  const [form, setForm] = useState({ username: '', password: '' });\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await instance.post('/auth/login', form);\r\n      const { token, userId, username } = response.data;\r\n\r\n      if (!token || !userId) {\r\n        throw new Error(\"Invalid login response: missing token or userId\");\r\n      }\r\n\r\n      // Store data in localStorage\r\n      localStorage.setItem('jwt', token);\r\n      localStorage.setItem('userId', userId);\r\n      localStorage.setItem('username', username);\r\n\r\n      console.log(\"Logged in successfully:\", { username, userId });\r\n\r\n      setForm({ username: '', password: '' });\r\n      navigate(`/`);\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      alert(\"Login failed. Please check your credentials.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container px-6\">\r\n      <h2 className=\"my-3\">Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={form.username}\r\n          onChange={(e) => setForm({ ...form, username: e.target.value })}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={form.password}\r\n          onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC;IAAES,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAChE,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,aAAa,EAAET,IAAI,CAAC;MACzD,MAAM;QAAEU,KAAK;QAAEC,MAAM;QAAET;MAAS,CAAC,GAAGM,QAAQ,CAACI,IAAI;MAEjD,IAAI,CAACF,KAAK,IAAI,CAACC,MAAM,EAAE;QACrB,MAAM,IAAIE,KAAK,CAAC,iDAAiD,CAAC;MACpE;;MAEA;MACAC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEL,KAAK,CAAC;MAClCI,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEJ,MAAM,CAAC;MACtCG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEb,QAAQ,CAAC;MAE1Cc,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE;QAAEf,QAAQ;QAAES;MAAO,CAAC,CAAC;MAE5DV,OAAO,CAAC;QAAEC,QAAQ,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC,CAAC;MACvCC,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZF,OAAO,CAACG,KAAK,CAAC,cAAc,EAAED,GAAG,CAAC;MAClCE,KAAK,CAAC,8CAA8C,CAAC;IACvD;EACF,CAAC;EAED,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BzB,OAAA;MAAIwB,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B7B,OAAA;MAAM8B,QAAQ,EAAEtB,YAAa;MAAAiB,QAAA,gBAC3BzB,OAAA;QACE+B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAE9B,IAAI,CAACE,QAAS;QACrB6B,QAAQ,EAAGzB,CAAC,IAAKL,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEE,QAAQ,EAAEI,CAAC,CAAC0B,MAAM,CAACF;QAAM,CAAC,CAAE;QAChEG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF7B,OAAA;QACE+B,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAE9B,IAAI,CAACG,QAAS;QACrB4B,QAAQ,EAAGzB,CAAC,IAAKL,OAAO,CAAC;UAAE,GAAGD,IAAI;UAAEG,QAAQ,EAAEG,CAAC,CAAC0B,MAAM,CAACF;QAAM,CAAC,CAAE;QAChEG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF7B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC3B,EAAA,CAnDuBD,KAAK;EAAA,QAEVH,WAAW;AAAA;AAAAuC,EAAA,GAFNpC,KAAK;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}