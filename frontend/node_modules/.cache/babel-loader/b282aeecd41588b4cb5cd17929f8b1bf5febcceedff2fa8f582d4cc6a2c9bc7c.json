{"ast":null,"code":"var _jsxFileName = \"C:\\\\ADHDStudyApp\\\\frontend\\\\src\\\\pages\\\\homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PomodoroTimer from \"../components/Pomodoro/pomodoro\";\nimport ToDoList from \"../components/ToDoList/todolist\";\nimport CalendarView from \"../components/Calendar/calendar\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [username, setUsername] = useState(null);\n\n  // ✅ Декодирање на JWT токенот за да го добиеме username\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        const user = decoded.sub || decoded.username || decoded.user || \"guest\";\n        setUsername(user);\n      } catch (err) {\n        console.error(\"Invalid token:\", err);\n      }\n    }\n  }, []);\n\n  // ✅ Вчитување задачи само откако ќе имаме username\n  useEffect(() => {\n    if (!username) return;\n    axios.get(`http://localhost:8080/api/tasks/${username}`).then(res => setTasks(res.data)).catch(err => console.error(\"Error loading tasks:\", err));\n  }, [username]);\n  if (!username) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0421\\u0435 \\u0432\\u0447\\u0438\\u0442\\u0443\\u0432\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center h-screen bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-6\",\n          children: [\"\\u0414\\u043E\\u0431\\u0440\\u0435\\u0434\\u043E\\u0458\\u0434\\u0435 \\u043D\\u0430\\u0437\\u0430\\u0434, \", username, \" \\uD83D\\uDC4B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PomodoroTimer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n          username: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CalendarView, {\n          tasks: tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"pcsdnXmL317nAhXi9FRJbAoeEt4=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","PomodoroTimer","ToDoList","CalendarView","axios","jwtDecode","jsxDEV","_jsxDEV","HomePage","_s","tasks","setTasks","username","setUsername","token","localStorage","getItem","decoded","user","sub","err","console","error","get","then","res","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/ADHDStudyApp/frontend/src/pages/homepage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PomodoroTimer from \"../components/Pomodoro/pomodoro\";\r\nimport ToDoList from \"../components/ToDoList/todolist\";\r\nimport CalendarView from \"../components/Calendar/calendar\";\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nconst HomePage = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [username, setUsername] = useState(null);\r\n\r\n  // ✅ Декодирање на JWT токенот за да го добиеме username\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token);\r\n        const user = decoded.sub || decoded.username || decoded.user || \"guest\";\r\n        setUsername(user);\r\n      } catch (err) {\r\n        console.error(\"Invalid token:\", err);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // ✅ Вчитување задачи само откако ќе имаме username\r\n  useEffect(() => {\r\n    if (!username) return;\r\n\r\n    axios\r\n      .get(`http://localhost:8080/api/tasks/${username}`)\r\n      .then((res) => setTasks(res.data))\r\n      .catch((err) => console.error(\"Error loading tasks:\", err));\r\n  }, [username]);\r\n\r\n  if (!username) return <p>Се вчитува...</p>;\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen\">\r\n      <main>\r\n        <div className=\"flex flex-col items-center justify-center h-screen bg-gray-50\">\r\n          <h1 className=\"text-3xl font-bold mb-6\">Добредојде назад, {username} 👋</h1>\r\n          <PomodoroTimer />\r\n          <ToDoList username={username} />\r\n          <CalendarView tasks={tasks} />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}