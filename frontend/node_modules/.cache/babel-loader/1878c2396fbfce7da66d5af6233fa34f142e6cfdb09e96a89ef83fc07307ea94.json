{"ast":null,"code":"var _jsxFileName = \"C:\\\\ADHDStudyApp\\\\frontend\\\\src\\\\components\\\\Pomodoro\\\\pomodoro.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PomodoroTimer = () => {\n  _s();\n  const [username, setUsername] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(25 * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [cycle, setCycle] = useState(\"work\");\n\n  // 🔹 Декодирање на JWT токенот\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        setUsername(decoded.sub || decoded.username || decoded.user || \"guest\");\n      } catch (err) {\n        console.error(\"Invalid token:\", err);\n      }\n    }\n  }, []);\n\n  // 🔹 Клуч по корисник\n  const storageKey = `pomodoro_${username}`;\n\n  // 🔹 Вчитување состојба при refresh\n  useEffect(() => {\n    if (!username) return;\n    const saved = localStorage.getItem(storageKey);\n    if (saved) {\n      const {\n        timeLeft,\n        isRunning,\n        cycle,\n        lastUpdate,\n        date\n      } = JSON.parse(saved);\n      const today = new Date().toDateString();\n\n      // ако е нов ден — ресетирај\n      if (date && date !== today) {\n        localStorage.removeItem(storageKey);\n        return;\n      }\n      const now = Date.now();\n      const elapsed = Math.floor((now - lastUpdate) / 1000);\n      const newTime = isRunning ? Math.max(timeLeft - elapsed, 0) : timeLeft;\n      setTimeLeft(newTime);\n      setIsRunning(isRunning);\n      setCycle(cycle);\n    }\n  }, [username]);\n\n  // 🔹 Зачувување при секоја промена\n  useEffect(() => {\n    if (!username) return;\n    localStorage.setItem(storageKey, JSON.stringify({\n      timeLeft,\n      isRunning,\n      cycle,\n      lastUpdate: Date.now(),\n      date: new Date().toDateString()\n    }));\n  }, [timeLeft, isRunning, cycle, username]);\n\n  // 🔹 Паузирај при гасење/refresh\n  useEffect(() => {\n    const handleUnload = () => {\n      if (!username) return;\n      const saved = localStorage.getItem(storageKey);\n      if (saved) {\n        const parsed = JSON.parse(saved);\n        parsed.isRunning = false;\n        parsed.lastUpdate = Date.now();\n        localStorage.setItem(storageKey, JSON.stringify(parsed));\n      }\n    };\n    window.addEventListener(\"beforeunload\", handleUnload);\n    return () => window.removeEventListener(\"beforeunload\", handleUnload);\n  }, [username, storageKey]);\n\n  // 🔹 Логика на тајмерот\n  useEffect(() => {\n    let timer;\n    if (isRunning && timeLeft > 0) {\n      timer = setInterval(() => setTimeLeft(prev => prev - 1), 1000);\n    } else if (timeLeft === 0) {\n      if (cycle === \"work\") {\n        alert(\"Време е за пауза ☕\");\n        setCycle(\"break\");\n        setTimeLeft(5 * 60);\n      } else {\n        alert(\"Време е за работа 💪\");\n        setCycle(\"work\");\n        setTimeLeft(25 * 60);\n      }\n    }\n    return () => clearInterval(timer);\n  }, [isRunning, timeLeft, cycle]);\n  const formatTime = seconds => {\n    const m = Math.floor(seconds / 60);\n    const s = seconds % 60;\n    return `${m.toString().padStart(2, \"0\")}:${s.toString().padStart(2, \"0\")}`;\n  };\n  if (!username) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0421\\u0435 \\u0432\\u0447\\u0438\\u0442\\u0443\\u0432\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center bg-white p-6 rounded-2xl shadow-md w-80\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-2\",\n      children: cycle === \"work\" ? \"Фокус време\" : \"Пауза\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-4xl font-mono mb-4\",\n      children: formatTime(timeLeft)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsRunning(!isRunning),\n        className: \"bg-blue-500 text-white px-4 py-2 rounded-xl\",\n        children: isRunning ? \"Пауза\" : \"Старт\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setIsRunning(false);\n          setTimeLeft(25 * 60);\n          setCycle(\"work\");\n          localStorage.removeItem(storageKey);\n        },\n        className: \"bg-gray-300 px-4 py-2 rounded-xl\",\n        children: \"\\u0420\\u0435\\u0441\\u0435\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(PomodoroTimer, \"ab/Shaop7SqcGyA72GnntJxolUc=\");\n_c = PomodoroTimer;\nexport default PomodoroTimer;\nvar _c;\n$RefreshReg$(_c, \"PomodoroTimer\");","map":{"version":3,"names":["React","useState","useEffect","jwtDecode","jsxDEV","_jsxDEV","PomodoroTimer","_s","username","setUsername","timeLeft","setTimeLeft","isRunning","setIsRunning","cycle","setCycle","token","localStorage","getItem","decoded","sub","user","err","console","error","storageKey","saved","lastUpdate","date","JSON","parse","today","Date","toDateString","removeItem","now","elapsed","Math","floor","newTime","max","setItem","stringify","handleUnload","parsed","window","addEventListener","removeEventListener","timer","setInterval","prev","alert","clearInterval","formatTime","seconds","m","s","toString","padStart","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/ADHDStudyApp/frontend/src/components/Pomodoro/pomodoro.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nconst PomodoroTimer = () => {\r\n  const [username, setUsername] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(25 * 60);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [cycle, setCycle] = useState(\"work\");\r\n\r\n  // 🔹 Декодирање на JWT токенот\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token);\r\n        setUsername(decoded.sub || decoded.username || decoded.user || \"guest\");\r\n      } catch (err) {\r\n        console.error(\"Invalid token:\", err);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // 🔹 Клуч по корисник\r\n  const storageKey = `pomodoro_${username}`;\r\n\r\n  // 🔹 Вчитување состојба при refresh\r\n  useEffect(() => {\r\n    if (!username) return;\r\n    const saved = localStorage.getItem(storageKey);\r\n    if (saved) {\r\n      const { timeLeft, isRunning, cycle, lastUpdate, date } = JSON.parse(saved);\r\n      const today = new Date().toDateString();\r\n\r\n      // ако е нов ден — ресетирај\r\n      if (date && date !== today) {\r\n        localStorage.removeItem(storageKey);\r\n        return;\r\n      }\r\n\r\n      const now = Date.now();\r\n      const elapsed = Math.floor((now - lastUpdate) / 1000);\r\n      const newTime = isRunning ? Math.max(timeLeft - elapsed, 0) : timeLeft;\r\n\r\n      setTimeLeft(newTime);\r\n      setIsRunning(isRunning);\r\n      setCycle(cycle);\r\n    }\r\n  }, [username]);\r\n\r\n  // 🔹 Зачувување при секоја промена\r\n  useEffect(() => {\r\n    if (!username) return;\r\n    localStorage.setItem(\r\n      storageKey,\r\n      JSON.stringify({\r\n        timeLeft,\r\n        isRunning,\r\n        cycle,\r\n        lastUpdate: Date.now(),\r\n        date: new Date().toDateString(),\r\n      })\r\n    );\r\n  }, [timeLeft, isRunning, cycle, username]);\r\n\r\n  // 🔹 Паузирај при гасење/refresh\r\n  useEffect(() => {\r\n    const handleUnload = () => {\r\n      if (!username) return;\r\n      const saved = localStorage.getItem(storageKey);\r\n      if (saved) {\r\n        const parsed = JSON.parse(saved);\r\n        parsed.isRunning = false;\r\n        parsed.lastUpdate = Date.now();\r\n        localStorage.setItem(storageKey, JSON.stringify(parsed));\r\n      }\r\n    };\r\n    window.addEventListener(\"beforeunload\", handleUnload);\r\n    return () => window.removeEventListener(\"beforeunload\", handleUnload);\r\n  }, [username, storageKey]);\r\n\r\n  // 🔹 Логика на тајмерот\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isRunning && timeLeft > 0) {\r\n      timer = setInterval(() => setTimeLeft((prev) => prev - 1), 1000);\r\n    } else if (timeLeft === 0) {\r\n      if (cycle === \"work\") {\r\n        alert(\"Време е за пауза ☕\");\r\n        setCycle(\"break\");\r\n        setTimeLeft(5 * 60);\r\n      } else {\r\n        alert(\"Време е за работа 💪\");\r\n        setCycle(\"work\");\r\n        setTimeLeft(25 * 60);\r\n      }\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isRunning, timeLeft, cycle]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const m = Math.floor(seconds / 60);\r\n    const s = seconds % 60;\r\n    return `${m.toString().padStart(2, \"0\")}:${s.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  if (!username) return <p>Се вчитува...</p>;\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center bg-white p-6 rounded-2xl shadow-md w-80\">\r\n      <h2 className=\"text-xl font-semibold mb-2\">\r\n        {cycle === \"work\" ? \"Фокус време\" : \"Пауза\"}\r\n      </h2>\r\n      <p className=\"text-4xl font-mono mb-4\">{formatTime(timeLeft)}</p>\r\n      <div className=\"flex space-x-2\">\r\n        <button\r\n          onClick={() => setIsRunning(!isRunning)}\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded-xl\"\r\n        >\r\n          {isRunning ? \"Пауза\" : \"Старт\"}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            setIsRunning(false);\r\n            setTimeLeft(25 * 60);\r\n            setCycle(\"work\");\r\n            localStorage.removeItem(storageKey);\r\n          }}\r\n          className=\"bg-gray-300 px-4 py-2 rounded-xl\"\r\n        >\r\n          Ресет\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PomodoroTimer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}