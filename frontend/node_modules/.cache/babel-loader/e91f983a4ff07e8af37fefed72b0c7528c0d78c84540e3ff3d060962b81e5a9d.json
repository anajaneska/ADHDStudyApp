{"ast":null,"code":"var _jsxFileName = \"C:\\\\ADHDStudyApp\\\\frontend\\\\src\\\\pages\\\\homepage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport PomodoroTimer from \"../components/Pomodoro/pomodoro\";\nimport ToDoList from \"../components/ToDoList/todolist\";\nimport CalendarView from \"../components/Calendar/calendar\";\nimport instance from \"../custom-axios/axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [userId, setUserId] = useState(null);\n  const [username, setUsername] = useState(null);\n\n  // âœ… Decode JWT to get user info\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt\");\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        setUsername(decoded.sub || decoded.username || \"guest\");\n        setUserId(decoded.id); // make sure your JWT contains the numeric userId\n      } catch (err) {\n        console.error(\"Invalid token:\", err);\n      }\n    }\n  }, []);\n\n  // âœ… Fetch tasks once we have userId\n  useEffect(() => {\n    if (!userId) return;\n    instance.get(`/tasks/${userId}`).then(res => setTasks(res.data)).catch(err => console.error(\"Error loading tasks:\", err));\n  }, [userId]);\n  if (!username || !userId) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0421\\u0435 \\u0432\\u0447\\u0438\\u0442\\u0443\\u0432\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 36\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center h-screen bg-gray-50\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold mb-6\",\n          children: [\"\\u0414\\u043E\\u0431\\u0440\\u0435\\u0434\\u043E\\u0458\\u0434\\u0435 \\u043D\\u0430\\u0437\\u0430\\u0434, \", username, \" \\uD83D\\uDC4B\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PomodoroTimer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n          userId: userId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(CalendarView, {\n          tasks: tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"/LzPZonVH3GYJrKQRc6ySHG88mM=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","PomodoroTimer","ToDoList","CalendarView","instance","jwtDecode","jsxDEV","_jsxDEV","HomePage","_s","tasks","setTasks","userId","setUserId","username","setUsername","token","localStorage","getItem","decoded","sub","id","err","console","error","get","then","res","data","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/ADHDStudyApp/frontend/src/pages/homepage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PomodoroTimer from \"../components/Pomodoro/pomodoro\";\r\nimport ToDoList from \"../components/ToDoList/todolist\";\r\nimport CalendarView from \"../components/Calendar/calendar\";\r\nimport instance from \"../custom-axios/axios\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nconst HomePage = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [userId, setUserId] = useState(null);\r\n  const [username, setUsername] = useState(null);\r\n\r\n  // âœ… Decode JWT to get user info\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"jwt\");\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token);\r\n        setUsername(decoded.sub || decoded.username || \"guest\");\r\n        setUserId(decoded.id); // make sure your JWT contains the numeric userId\r\n      } catch (err) {\r\n        console.error(\"Invalid token:\", err);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // âœ… Fetch tasks once we have userId\r\n  useEffect(() => {\r\n    if (!userId) return;\r\n\r\n    instance\r\n      .get(`/tasks/${userId}`)\r\n      .then((res) => setTasks(res.data))\r\n      .catch((err) => console.error(\"Error loading tasks:\", err));\r\n  }, [userId]);\r\n\r\n  if (!username || !userId) return <p>Ð¡Ðµ Ð²Ñ‡Ð¸Ñ‚ÑƒÐ²Ð°...</p>;\r\n\r\n  return (\r\n    <div className=\"flex flex-col min-h-screen\">\r\n      <main>\r\n        <div className=\"flex flex-col items-center justify-center h-screen bg-gray-50\">\r\n          <h1 className=\"text-3xl font-bold mb-6\">Ð”Ð¾Ð±Ñ€ÐµÐ´Ð¾Ñ˜Ð´Ðµ Ð½Ð°Ð·Ð°Ð´, {username} ðŸ‘‹</h1>\r\n          <PomodoroTimer />\r\n          <ToDoList userId={userId} /> {/* pass userId instead of username */}\r\n          <CalendarView tasks={tasks} />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,YAAY,MAAM,iCAAiC;AAC1D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMiB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;IACzC,IAAIF,KAAK,EAAE;MACT,IAAI;QACF,MAAMG,OAAO,GAAGd,SAAS,CAACW,KAAK,CAAC;QAChCD,WAAW,CAACI,OAAO,CAACC,GAAG,IAAID,OAAO,CAACL,QAAQ,IAAI,OAAO,CAAC;QACvDD,SAAS,CAACM,OAAO,CAACE,EAAE,CAAC,CAAC,CAAC;MACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,gBAAgB,EAAEF,GAAG,CAAC;MACtC;IACF;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAvB,SAAS,CAAC,MAAM;IACd,IAAI,CAACa,MAAM,EAAE;IAEbR,QAAQ,CACLqB,GAAG,CAAC,UAAUb,MAAM,EAAE,CAAC,CACvBc,IAAI,CAAEC,GAAG,IAAKhB,QAAQ,CAACgB,GAAG,CAACC,IAAI,CAAC,CAAC,CACjCC,KAAK,CAAEP,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC,CAAC;EAC/D,CAAC,EAAE,CAACV,MAAM,CAAC,CAAC;EAEZ,IAAI,CAACE,QAAQ,IAAI,CAACF,MAAM,EAAE,oBAAOL,OAAA;IAAAuB,QAAA,EAAG;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAErD,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,4BAA4B;IAAAL,QAAA,eACzCvB,OAAA;MAAAuB,QAAA,eACEvB,OAAA;QAAK4B,SAAS,EAAC,+DAA+D;QAAAL,QAAA,gBAC5EvB,OAAA;UAAI4B,SAAS,EAAC,yBAAyB;UAAAL,QAAA,GAAC,+FAAkB,EAAChB,QAAQ,EAAC,eAAG;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5E3B,OAAA,CAACN,aAAa;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACjB3B,OAAA,CAACL,QAAQ;UAACU,MAAM,EAAEA;QAAO;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC,eAC7B3B,OAAA,CAACJ,YAAY;UAACO,KAAK,EAAEA;QAAM;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACzB,EAAA,CA3CID,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}